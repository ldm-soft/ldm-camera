{"version":3,"sources":["audio/transport.mp3","audio/person.mp3","audio/persontransport.mp3","audio/warningtransport.mp3","audio/warningperson.mp3","utilities.js","App.js","index.js"],"names":["module","exports","drawRect","detections","ctx","forEach","prediction","index","x","y","width","height","title","text","color","Math","floor","random","toString","strokeStyle","font","beginPath","fillStyle","fillText","rect","stroke","App","webcamRef","useRef","canvasRef","useState","person","setPerson","transport","setTransport","defaultMax","maxTransport","maxPersion","timeRanges","fromTime","toTime","maxPerson","setmaxPerson","setMaxTransport","audioTransport","Audio","transportPath","audioPersion","personPath","audioPersonTransport","persontransportPath","audioWarningTransport","warningtransportPath","audioWarningPerson","warningpersonPath","runMain","a","cocossd","net","console","log","setInterval","detect","isEnabledAudio","playAudio","audio","play","sleep","ms","Promise","resolve","setTimeout","current","video","readyState","videoWidth","videoHeight","obj","objectItems","countPerson","countTransport","Object","values","item","class","push","getContext","checkActiveWarning","countWarningTransport","timeWarningTransportOld","countWarningPerson","timeWarningPersontOld","minutesOfDay","m","getMinutes","getHours","currentDate","Date","indexTime","findIndex","toDateString","timeRange","setMaxOnTime","checkWarning","useEffect","navigator","mediaDevices","getUserMedia","then","stream","enumerateDevices","devices","arr","device","kind","setDevices","setDeviceId","indexDevice","deviceId","catch","err","error","name","message","loadDevices","React","setIndexDevice","className","Helmet","charSet","content","rel","type","href","length","onClick","indexNew","ref","muted","videoConstraints","style","position","marginLeft","marginRight","left","right","textAlign","zindex","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24d2b126.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/transport.56531d97.mp3\";","module.exports = __webpack_public_path__ + \"static/media/person.d5b99dce.mp3\";","module.exports = __webpack_public_path__ + \"static/media/persontransport.ac45c07b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/warningtransport.3eb6bd7b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/warningperson.66ba4ddf.mp3\";","export const drawRect = (detections, ctx) =>{\n  // Chạy vòng lặp qua tất cả các đối tượng sẽ vẽ\n  detections.forEach((prediction, index) => {\n\n    // Lấy thuộc tính hộp viền hiển thị của đối tượng\n    const [x, y, width, height] = prediction['bbox']; \n    let title ='';\n    switch (prediction[\"class\"]) {\n      case \"person\":\n        title = \"Con người\";\n        break;\n      case \"bicycle\":\n        title = \"Xe đạp\";\n        break;\n      case \"car\":\n        title = \"Ôtô\";\n        break;\n      case \"motorcycle\":\n        title = \"Xe máy\";\n        break;\n      default:\n        break;\n    }\n    const text = `[${title}]`;//`[${index + 1}]`;//prediction['class']; \n\n    // Lấy màu ngẫu nhiên cho các ô viền vẽ đối tượng\n    const color = Math.floor(Math.random()*16777215).toString(16);\n    ctx.strokeStyle = '#' + color\n    ctx.font = '18px Arial';\n\n    // thực hiện vẽ các hộp báo nhận diện đối tượng ra màn hình.\n    ctx.beginPath();   \n    ctx.fillStyle = '#' + color\n    ctx.fillText(text, x, y);\n    ctx.rect(x, y, width, height); \n    ctx.stroke();\n  });\n}\n","// style = các thuộc tính hiển thị của thẻ trên màn hình web\r\n// console = phần hiển thị log khi sử dụng ứng dụng\r\n// ứng dụng tích hợp tính năng phân tích dữ liệu từ hình ảnh dựa theo thuật toán nhận diện của google.\r\n// Import dependencies\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\r\nimport Webcam from \"react-webcam\";\r\nimport \"./App.css\";\r\nimport { drawRect } from \"./utilities\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport transportPath from \"./audio/transport.mp3\";\r\nimport personPath from \"./audio/person.mp3\";\r\nimport persontransportPath from \"./audio/persontransport.mp3\";\r\nimport warningtransportPath from \"./audio/warningtransport.mp3\";\r\nimport warningpersonPath from \"./audio/warningperson.mp3\";\r\nexport interface itemDetect {\r\n  objectItems: obj;\r\n  timeExt: Date;\r\n}\r\ninterface timeRange {\r\n  fromTime: String;\r\n  toTime: String;\r\n  maxPersion: Number;\r\n  maxTransport: Number;\r\n}\r\n\r\nfunction App() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [person, setPerson] = useState(0);\r\n  const [transport, setTransport] = useState(0);\r\n  //\r\n  const waitimeReadWarning: Number = 10 * 1000; //10s (đơn vị tính mili giây với 1s = 1000ms)\r\n  //defaultMax Sử dụng cho trường hợp khác khung giờ cao điểm\r\n  const defaultMax = {\r\n    maxTransport: 0,\r\n    maxPersion: 0,\r\n  };\r\n  //timeRanges định nghĩa khung giờ cao điểm\r\n  const timeRanges: timeRange[] = [\r\n    {\r\n      fromTime: \"06:40\",\r\n      toTime: \"07:10\",\r\n      maxTransport: 20,\r\n      maxPersion: 20,\r\n    },\r\n    {\r\n      fromTime: \"16:30\",\r\n      toTime: \"16:50\",\r\n      maxTransport: 20,\r\n      maxPersion: 20,\r\n    },\r\n  ];\r\n  //Khởi tạo max =  default\r\n  const [maxPerson, setmaxPerson] = useState(defaultMax.maxPersion); //Số lượng đối tượng là con người (Nếu lớn  hơn sẽ thông báo: Khu vực cổng trường xin mọi người hãy di chuyển tránh tắc nghẽn giao thông.)\r\n  const [maxTransport, setMaxTransport] = useState(defaultMax.maxTransport); //Số lượng đối tượng là phương tiện tối đa có trong khung hình(Nếu lớn hơn sẽ thông báo: Yêu cầu phương tiện giao thông di chuyển nhanh qua khu vực cổng trường để đảm bảo an toàn giao thông.)\r\n  //\r\n  var audioTransport = new Audio(transportPath);\r\n  var audioPersion = new Audio(personPath);\r\n  var audioPersonTransport = new Audio(persontransportPath);\r\n  var audioWarningTransport = new Audio(warningtransportPath);\r\n  var audioWarningPerson = new Audio(warningpersonPath);\r\n  // Main function\r\n  const runMain = async () => {\r\n    \r\n    const net = await cocossd.load();\r\n    console.log(\"Handpose model loaded.\");\r\n    //  Set thời gian re-load tìm kiếm người có trong khung hình đơn vị tính mili giây\r\n    //  Mặc định 10ms sẽ load 1 lần\r\n    setInterval(() => {\r\n      detect(net);\r\n    }, 10);\r\n  };\r\n  let isEnabledAudio : Boolean = true;\r\n  const playAudio = async (audio: Audio) => {\r\n    if (isEnabledAudio) {\r\n      isEnabledAudio =   false ;\r\n      await audio.play();\r\n      //Dừng lại đợi tương ứng thời gian waitimeReadWarning mới phát thông báo tiếp theo nếu có cảnh báo\r\n      await sleep(waitimeReadWarning);\r\n      isEnabledAudio =   true ;\r\n    }\r\n  };\r\n  const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n  const detect = async (net) => {\r\n    // Kiểm tra data video trong khung hình tồn tại\r\n    // undefined = chưa tồn tại/chưa được định nghĩa\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Lấy thông tin video\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Thiết lập chiều cao/rộng cho khung hình video\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Thiết lập chiều cao/rộng cho khung hình viền đối tượng khi phát hiện.\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      // Phân tích và phát hiện đối tượng trong khung hình - Tối đa được thiết lập là 100\r\n      //(*Tùy số lượng đối tượng cần phát hiện mà thay đổi thông số này)\r\n      const obj = await net.detect(video, 1000);\r\n      var objectItems = [];\r\n      let countPerson = 0;\r\n      let countTransport = 0;\r\n      //remove item old\r\n      //\r\n      Object.values(obj).forEach((item) => {\r\n        //Các đối tượng là con người(person) sẽ được chọn lọc và lấy ra ở bước này.\r\n        //bicycle, motorcycle , car  = transport\r\n        if (\r\n          item.class === \"person\" ||\r\n          item.class === \"bicycle\" ||\r\n          item.class === \"car\" ||\r\n          item.class === \"motorcycle\"\r\n        ) {\r\n          if (item.class === \"person\") {\r\n            countPerson++; //Tăng biến đếm  số người lên 1 đơn vị\r\n          } else {\r\n            countTransport++; //Tăng biến đếm  số phương tiện lên 1 đơn vị\r\n          }\r\n          //find item\r\n          objectItems.push(item);\r\n        }\r\n      });\r\n      //Set số lượng đối tượng là con người được phát hiện trong hình hiển thị lên màn hình\r\n      setPerson(countPerson);\r\n      setTransport(countTransport);\r\n      // Thực hiện vẽ viền những đối tượng được phát hiện là con người.\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      drawRect(objectItems, ctx);\r\n      //\r\n      checkActiveWarning(countPerson,countTransport);\r\n      //\r\n    }\r\n  };\r\n  let countWarningTransport : number = 0;\r\n  let timeWarningTransportOld :  date = null;\r\n  let countWarningPerson: number = 0;\r\n  let timeWarningPersontOld: date = null;\r\n  //Tính toán để nhắc nhở TH:\r\n  function checkWarning(countPerson: number, countTransport : number): Boolean {\r\n    const currentDate = new Date();\r\n    //Tính toán nhắc nhở đối tượng phương tiện\r\n    //Trong trường hợp 05 lần phát cảnh báo mà phương tiện không di chuyển\r\n    //Ứng dụng sẽ phát ra thông báo: \"Nếu các phương tiện không ra khỏi khu vực này, gây ảnh hưởng ATGT, dữ liệu vi phạm sẽ được chuyển đến cơ quan Công an xử lý\"\r\n    if (countTransport > maxTransport) {\r\n      //Trường hợp nhắc nhở > 5 lần mà không di chuyển)\r\n      if (countWarningTransport >= 5) {\r\n        playAudio(audioWarningTransport);\r\n        countWarningTransport = 0; // Sau khi nhắc nhở thì reset\r\n        timeWarningTransportOld =null;\r\n        return true;\r\n      }\r\n      if (\r\n        timeWarningTransportOld == null ||\r\n        currentDate - timeWarningTransportOld < 20 * 1000\r\n      ) {\r\n        // Nhắc nhở  liên tiếp trong 20s\r\n        countWarningTransport++;\r\n      } else {\r\n        countWarningTransport = 0;\r\n        timeWarningTransportOld =null;\r\n      }\r\n      timeWarningTransportOld = currentDate;\r\n    }\r\n    //Tính toán nhắc nhở đối tượng con người\r\n    //TH 05 lần học sinh không giải tán vẫn tụ tập thì phát cảnh báo: \"Đề nghị các em học sinh chấp hành tốt nội quy nhà trường, cố tình vi phạm dữ liệu hình ảnh sẽ được chuyển cho Nhà trường xử lý\".\r\n    if (countPerson > maxPerson) {\r\n      //Trường hợp nhắc nhở > 5 lần mà không di chuyển)\r\n      if (countWarningPerson >= 5) {\r\n        playAudio(audioWarningPerson);\r\n        countWarningPerson = 0; // Sau khi nhắc nhở thì reset\r\n        timeWarningPersontOld = null;\r\n        return true;\r\n      }\r\n      if (\r\n        timeWarningPersontOld == null ||\r\n        currentDate - timeWarningPersontOld < 20 * 1000\r\n      ) {\r\n        // Nhắc nhở  liên tiếp   trong 20s\r\n        countWarningPerson ++;\r\n      } else {\r\n        countWarningPerson = 0;\r\n        timeWarningPersontOld =null;\r\n      }\r\n      timeWarningPersontOld = currentDate;\r\n    }\r\n    return false;\r\n  }\r\n  var minutesOfDay = function (m: Date) {\r\n    return m.getMinutes() + m.getHours() * 60;\r\n  };\r\n  function setMaxOnTime() {\r\n    const currentDate = new Date();\r\n    const indexTime = timeRanges.findIndex(\r\n      (item) =>\r\n        minutesOfDay(currentDate) >=\r\n          minutesOfDay(\r\n            new Date(`${currentDate.toDateString()} ${item.fromTime}`)\r\n          ) &&\r\n        minutesOfDay(currentDate) <=\r\n          minutesOfDay(new Date(`${currentDate.toDateString()} ${item.toTime}`))\r\n    );\r\n\r\n    const timeRange = indexTime !== -1 ? timeRanges[indexTime] : defaultMax;\r\n    setmaxPerson(timeRange.maxPersion);\r\n    setMaxTransport(timeRange.maxTransport);\r\n  }\r\n  function checkActiveWarning(countPerson : number, countTransport : number):  void {\r\n    //Set lại max theo khung giờ\r\n    setMaxOnTime();\r\n    //\r\n    if(!isEnabledAudio)\r\n    {\r\n      return;\r\n    }\r\n    //\r\n    if (checkWarning(countPerson, countTransport)) {\r\n      return;\r\n    }\r\n    if (countPerson > maxPerson && countTransport > maxTransport) {\r\n      playAudio(audioPersonTransport);\r\n      return;\r\n    }\r\n    if (countPerson > maxPerson) {\r\n      playAudio(audioPersion);\r\n      return;\r\n    }\r\n    if (countTransport > maxTransport) {\r\n      playAudio(audioTransport);\r\n      return;\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    runMain();\r\n  }, []);\r\n  useEffect(() => {\r\n    checkAllowCamera();\r\n  }, []);\r\n  const [deviceId, setDeviceId] = React.useState({});\r\n  const [devices, setDevices] = React.useState([]);\r\n  const [indexDevice, setIndexDevice] = React.useState(0);\r\n  //Kiển tra camera được chấp nhận sử dụng hay chưa.\r\n  function checkAllowCamera() {\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: true })\r\n      .then(function (stream) {\r\n        loadDevices();\r\n      });\r\n  }\r\n  // Load lên tất cả thiết bị là camera được xuất hiện\r\n  function loadDevices() {\r\n    if (!navigator.mediaDevices?.enumerateDevices) {\r\n      console.log(\"enumerateDevices() không được hỗ trợ.\");\r\n    } else {\r\n      // List cameras and microphones.\r\n      navigator.mediaDevices\r\n        .enumerateDevices()\r\n        .then((devices) => {\r\n          var arr = [];\r\n          devices.forEach((device) => {\r\n            //Kiểm tra và lấy ra danh sách các thiết bị là camera(tương ứng videoinput)\r\n            if (device.kind === \"videoinput\") {\r\n              arr.push(device);\r\n            }\r\n          });\r\n          //Set danh sách thiết bị là camera\r\n          setDevices(arr);\r\n          //Set ID thiết bị hiển thị lên màn hình\r\n          setDeviceId(devices[indexDevice].deviceId);\r\n        })\r\n        .catch((err) => {\r\n          // Xuất log nếu gặp lỗi\r\n          console.error(`${err.name}: ${err.message}`);\r\n        });\r\n    }\r\n  }\r\n  // Sự kiện click chuyển đổi camera\r\n  function handleClick() {\r\n    let indexNew = indexDevice;\r\n    if (indexDevice < devices.length - 1) {\r\n      indexNew++;\r\n    } else {\r\n      indexNew = 0;\r\n    }\r\n    setIndexDevice(indexNew);\r\n    setDeviceId(devices[indexNew].deviceId);\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>LDM SOFT</title>\r\n        <meta name=\"description\" content=\"camera-ai\" />\r\n        <link rel=\"icon\" type=\"image/png\" href=\"./icon/logo.png\" />\r\n      </Helmet>\r\n      <header className=\"App-header\">\r\n        <div className=\"camera-info\">\r\n          Camera: {indexDevice + 1} of {devices.length}\r\n        </div>\r\n        <div className={`person ${person > maxPerson ? \"alert-red\" : \"\"}`}>\r\n          Số người: {person}\r\n        </div>\r\n        <div\r\n          className={`transport ${transport > maxTransport ? \"alert-red\" : \"\"}`}\r\n        >\r\n          Phương tiện: {transport}\r\n        </div>\r\n        {devices.length > 1 && (\r\n          <button className=\"devicesButton\" onClick={handleClick}>\r\n            Change Camera\r\n          </button>\r\n        )}\r\n        <Webcam\r\n          ref={webcamRef}\r\n          muted={true}\r\n          videoConstraints={{\r\n            deviceId: deviceId,\r\n          }}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 8,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n          }}\r\n        />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}